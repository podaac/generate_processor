;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION write_gds2_modis_global_attributes,$
             i_file_id,$
             i_filename,$
             i_global_attributes_array,$
             i_num_cols,$
             i_num_rows

; Function write global attributes of the MODIS L2P Core data file in GDS2 format.
;
; The file format is a NetCDF file.
;
; Input:
;
;    see above 
;
; Output:
;
;    o_status       Status of attributes write.
;
; Assumption:
;
;    1) File is opened already.
;
;------------------------------------------------------------------------------------------------

; Load constants and configuration data.

@modis_data_config.cfg

routine_name = 'write_gds2_modis_global_attributes';
debug_module = 'write_gds2_modis_global_attributes:';
debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2P_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif

; Define local variables.

o_status = SUCCESS;

;
; Get today's date and time in UTC format.
;

today_is = systime(/UTC);

;print, 'today_is ', today_is;
;
; The format of the i_global_attributes_array is:
;
;   attribute_name attribute_type attribute_value
;
; where possible values for attribute_type are {string,integer,float}
;
; This function will split each row into 3 columns and write the attributes to file accordingly.

array_index = 0;

while (array_index LT  N_ELEMENTS(i_global_attributes_array)) do begin
    if debug_mode then print, debug_module + 'INFO:Inspecting [', i_global_attributes_array[array_index], ']';


    splitted_tokens = STRSPLIT(i_global_attributes_array[array_index],'|', /EXTRACT);
    ; The format is:
    ;      title                 | string | A descriptive title for the GHRSST data set
    ;      northernmost_latitude | float  | 90

    attribute_name = STRTRIM(splitted_tokens[0],2);

    ; Trim any leading spaces of each token

    attribute_type  = STRTRIM(splitted_tokens[1],2);
    attribute_value = STRTRIM(splitted_tokens[2],2)

    ; Because there are only 3 possible types supported, we only look for these 3 types.

    ; We assume an integer is a 32-bit integer, known in IDL as LONG.
    ; The 16-bit integer is known as SHORT or FIX()

    if (attribute_type  EQ "integer") then begin
        attribute_value = LONG(attribute_value);
    endif
    if (attribute_type EQ "float") then begin
        attribute_value = FLOAT(attribute_value);
    endif
    if (attribute_type EQ "string") then begin
        o_attribute_value = STRING(attribute_value);
    endif

    ;   
    ; Create a catch block to catch error in interaction with FILE IO.
    ;   

    CATCH, error_status
    if (error_status NE 0) then begin
        CATCH, /CANCEL
        print, debug_module + 'ERROR: Cannot write attribute ' + attribute_name + ' into file ' + i_filename;
        o_status = FAILURE;
        ; Must return immediately.
        return, o_status
    endif

    if debug_mode then print, debug_module + 'DEBUG: attribute_name [' + attribute_name + '] attribute_type [' + attribute_type + '] attribute_value [' + STRTRIM(STRING(attribute_value),2) + ']';
    NCDF_ATTPUT, i_file_id, /GLOBAL, attribute_name, attribute_value;
    CATCH, /CANCEL

    array_index++;
endwhile

;
; Define the dimensions of the dataset.
;

dataset_lat_id = NCDF_DIMDEF(i_file_id,'nj',i_num_rows);
CATCH, /CANCEL
;help, dataset_lat_id;

if (dataset_lat_id LT 0) then begin
    CATCH, /CANCEL
    print, debug_module + 'ERROR: Cannot define nj dimension for dataset in file ' + i_filename;
    o_status = FAILURE;
    NCDF_CONTROL, i_file_id, /ABORT;  Delete the file
    CATCH, /CANCEL
    ; Must return immediately.
    return, o_status
endif

dataset_lon_id = NCDF_DIMDEF(i_file_id,'ni',i_num_cols);
;help, dataset_lon_id;
CATCH, /CANCEL

if (dataset_lon_id LT 0) then begin
    CATCH, /CANCEL
    print, debug_module + 'ERROR: Cannot define ni dimension for dataset in file ' + i_filename;
    o_status = FAILURE;
    NCDF_CONTROL, i_file_id, /ABORT;  Delete the file
    CATCH, /CANCEL
    ; Must return immediately.
    return, o_status
endif

time_dim_id    = NCDF_DIMDEF(i_file_id, 'time', 1);
;help, time_dim_id;
CATCH, /CANCEL

if (time_dim_id LT 0) then begin
    CATCH, /CANCEL
    print, debug_module + 'ERROR: Cannot define time dimension for dataset in file ' + i_filename;
    o_status = FAILURE;
    NCDF_CONTROL, i_file_id, /ABORT;  Delete the file
    CATCH, /CANCEL
    ; Must return immediately.
    return, o_status
endif

;
; Put netCDF file out define mode and into data mode for writing:
;

CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, debug_module + 'ERROR: Cannot put netCDF file out of define mode and into data mode for file ' + i_filename;
    o_status = FAILURE;
    ; Must return immediately.
    return, o_status
endif

NCDF_CONTROL, i_file_id, /ENDEF
CATCH, /CANCEL

; ---------- Close up shop ---------- 
return, o_status
end
