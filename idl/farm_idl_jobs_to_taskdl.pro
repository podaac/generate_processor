;  Copyright 2007, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: farm_idl_jobs_to_taskdl.pro,v 1.2 2007/06/15 19:45:07 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM 

FUNCTION farm_idl_jobs_to_taskdl, $
    i_processing_jobs_array, $
    i_optional_arg

; Program receives a list of IDL jobs as strings and send them to the TaskDL to run.
; If this program is called, we are sure that TaskDL is available.

;
; Assumptions:
;
;   1. The IDL jobs actually runs.
;   2. The IDL jobs are standalone programs.
;   3. The number of jobs is the size of the job array.
;
;------------------------------------------------------------------------------------------------

; Load constants.  No ending semicolon is required.

@load_maf_constants

over_all_status = SUCCESS;

tstart = systime(1)
print, 'farm_idl_jobs_to_taskdl: execution start time:', systime()

;
; Get the number of jobs from the job array.
; No checking for too many jobs.
;

num_jobs = SIZE(i_processing_jobs_array,/N_ELEMENTS);

;
; Connect to TaskDL: start the server, spawn the IDL workers on slave nodes.
;
; Note: the farm_connect_taskdl will only create as many workers as runtime licenses are available
; even if you ask for more.

num_workers = num_jobs;

print, 'farm_idl_jobs_to_taskdl: num_workers = ', num_workers

l_connect_status = farm_connect_taskdl(num_workers, i_optional_arg);

if (l_connect_status NE SUCCESS) then begin
    print, 'farm_idl_jobs_to_taskdl: ERROR, Failed in farm_connect_taskdl().'

    l_status = error_log_writer($
         'farm_idl_jobs_to_taskdl',$
         ' Failed in farm_connect_taskdl()');

    over_all_status = FAILURE;
    return, over_all_status
endif

;
; Submit tasks.
;
; Dependency: farm_connect_task program must be called before farm_submit_tasks
;

;help, i_processing_jobs_array;
;help, i_processing_jobs_array[0];

l_status = farm_submit_tasks(i_processing_jobs_array);

;
; Disconnect from TaskDL: close server when tasks are done.
;
; Dependency: farm_connect_taskfl program must be called first. 
;
; If farm_disconnect_taskdl is not called, the static variable will remain and the server
; will run forever and take up runtime licenses.  The run away processes will need to be killed on
; the head node and all the slave nodes.
;

farm_disconnect_taskdl

print, 'Overall execution time:', systime(1) - tstart
help,/heap

return, over_all_status

end
