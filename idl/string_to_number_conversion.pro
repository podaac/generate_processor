;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION string_to_number_conversion, i_input_string, o_value

; Function attempts to convert a string to a number.  If the string is not valid,
; the status returned will be 0 and the default valued returned is also 0.
;
; How to use:
;
; i_input_string = '10'
; convert_status = string_to_number_conversion(i_input_string, o_value);
; help, i_input_string;
; help, convert_status;
; help, o_value;
;
; i_input_string = 'this_is_not_a_number';
; convert_status = string_to_number_conversion(i_input_string, o_value);
; help, i_input_string;
; help, convert_status;
; help, o_value;
;

o_status = 1;  Start out assume the string is a valid number.
o_value = 0L;  Set the output value to a LONG value of 0.
debug_module = 'string_to_number_conversion:';

; If using HEX, the set the following flag to true, otherwise we treat the string as a decimal.

hex_flag = 0;

; Convert the input string.  If the input string is an empty string it is considered a valid number,  

sanitized_string = STRTRIM(i_input_string);  Convert the input string to an actual string.

; In case there is an error, jump to ERROR_HANDLING_BLOCK.

ON_IOERROR, ERROR_HANDLING_BLOCK;

; Attempt to convert the string to a number using the Z format.

if (hex_flag) then begin
    READS, sanitized_string, o_value, FORMAT="(Z)";
endif else begin
    o_value = DOUBLE(sanitized_string);
endelse
GOTO, NO_ERROR_BLOCK;  If we got to here, there is no error so let's jump to the NO_ERROR_BLOCK label.

ERROR_HANDLING_BLOCK: 
    print, debug_module + 'ERROR: Cannot convert ', i_input_string, ' to a number.';
    o_status = 0;
    return, o_status;

NO_ERROR_BLOCK:
    return, o_status;

end
