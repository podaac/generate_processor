;  Copyright 2005, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: write_modis_global_attributes.pro,v 1.9 2007/04/16 21:41:48 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CVS
; New Request #xxxx

FUNCTION write_modis_global_attributes,$
         i_file_id,$
         i_filename,$
         i_start_time_array_element,$
         i_global_start_date_utc,$
         i_global_start_time_utc,$
         i_global_stop_date_utc,$
         i_global_stop_time_utc,$
         i_northernmost_latitude,$
         i_southernmost_latitude,$
         i_easternmost_longitude,$
         i_westernmost_longitude,$
         i_num_cols,$
         i_num_rows,$
         i_title,$
         i_dsd_entry_id,$
         i_platform,$
         i_comment,$
         i_processing_type

;
; Function write global attributes of the MODIS L2P Core data file.
;
; The file format is a NetCDF file.
;
; Input:
;
;    see above 
;
; Output:
;
;    status       Status of file creation.
;
; Assumption:
;
;    1) File is opened already.
;
;------------------------------------------------------------------------------------------------

; Load constants and configuration data.

@modis_data_config.cfg

; Define local variables.

status = SUCCESS;

;
; Create a catch block to catch error in interaction with writing global attributes. 
;

;CATCH, error_status
;if (error_status NE 0) then begin
;    CATCH, /CANCEL
;    print, 'write_modis_global_attributes: ERROR, Cannot write global attributes.'
;    print, i_filename
;    status = FAILURE;
;    ; Must return immediately.
;    return, status
;endif

;
; Get today's date and time in UTC format.
;

today_is = systime(/UTC);

;print, 'today_is ', today_is;


; Get the DEBUG_MODE if it is set.

debug_module = 'write_modis_global_attributes:';
debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2P_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1; 
endif

;
; Create global attributes for this file.
;

ncdf_attput, i_file_id, /GLOBAL, 'title', i_title;
ncdf_attput, i_file_id, /GLOBAL, 'DSD_entry_id', i_dsd_entry_id;
ncdf_attput, i_file_id, /GLOBAL, 'platform', i_platform;
ncdf_attput, i_file_id, /GLOBAL, 'sensor', const_sensor_name; 

ncdf_attput, i_file_id, /GLOBAL, 'Conventions', const_Conventions;
ncdf_attput, i_file_id, /GLOBAL, 'references', const_references;
ncdf_attput, i_file_id, /GLOBAL, 'institution', const_institution;
ncdf_attput, i_file_id, /GLOBAL, 'contact', const_contact;
ncdf_attput, i_file_id, /GLOBAL, 'GDS_version_id', const_gds_version_id;
ncdf_attput, i_file_id, /GLOBAL, 'references', const_references;
ncdf_attput, i_file_id, /GLOBAL, 'netcdf_version_id', const_netcdf_version_id; 
ncdf_attput, i_file_id, /GLOBAL, 'creation_date', today_is;

; Add the Quicklook or Refined depending on the processing type
if (i_processing_type EQ 'QUICKLOOK') then begin
    specific_history = 'Quicklook ' + const_history;
    ncdf_attput, i_file_id, /GLOBAL, 'history', specific_history; 
endif else begin
    specific_history = 'Refined ' + const_history;
    ncdf_attput, i_file_id, /GLOBAL, 'history', specific_history; 
endelse

ncdf_attput, i_file_id, /GLOBAL, 'product_version', const_product_version;
ncdf_attput, i_file_id, /GLOBAL, 'product_version', const_product_version 
ncdf_attput, i_file_id, /GLOBAL, 'spatial_resolution', const_spatial_resolution; 

;
; Set the size of time dimension.
;

time_dim_id = ncdf_dimdef(i_file_id, 'time', 1);

;
; Create a catch block to catch error in interaction with writing time related global attributes. 
;

CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'write_modis_global_attributes: ERROR, Cannot write time related global attributes.'
    print, i_filename
    status = FAILURE;
    ; Must return immediately.
    return, status
endif

;
; Update the start and stop time/date of the dataset enclosed within.
;

ncdf_attput, i_file_id, /GLOBAL, 'start_date', i_global_start_date_utc; 
ncdf_attput, i_file_id, /GLOBAL, 'start_time', i_global_start_time_utc;

ncdf_attput, i_file_id, /GLOBAL, 'stop_date', i_global_stop_date_utc; 
ncdf_attput, i_file_id, /GLOBAL, 'stop_time', i_global_stop_time_utc;
CATCH, /CANCEL

;
; Create a catch block to catch error in interaction with writing geographical global attributes.
;

CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'write_modis_global_attributes: ERROR, Cannot write geographical global attributes.'
    print, i_filename
    status = FAILURE;
    ; Must return immediately.
    return, status
endif

;
; Other global attributes.
;

ncdf_attput, i_file_id, /GLOBAL, 'northernmost_latitude', i_northernmost_latitude;
ncdf_attput, i_file_id, /GLOBAL, 'southernmost_latitude', i_southernmost_latitude;
ncdf_attput, i_file_id, /GLOBAL, 'easternmost_longitude', i_easternmost_longitude;
ncdf_attput, i_file_id, /GLOBAL, 'westernmost_longitude', i_westernmost_longitude;

ncdf_attput, i_file_id, /GLOBAL, 'file_quality_index', const_file_quality_index; 

; Add the Quicklook or Refined string depending on the processing type
if (i_processing_type EQ 'QUICKLOOK') then begin
    specific_comment = i_comment + '; Quicklook';
    ncdf_attput, i_file_id, /GLOBAL, 'comment', specific_comment 
endif else begin
    specific_comment = i_comment + '; Refined';
    ncdf_attput, i_file_id, /GLOBAL, 'comment', specific_comment 
endelse

CATCH, /CANCEL

;print, 'write_modis_global_attributes: All attributes written successfully.'

; Define the dimensions of the dataset.

CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'write_modis_global_attributes: ERROR, Cannot define lat lon dimensions for dataset.'
    print, i_filename
    status = FAILURE;
    ; Must return immediately.
    return, status
endif

dataset_lat_id = ncdf_dimdef(i_file_id,'nj',i_num_rows);
dataset_lon_id = ncdf_dimdef(i_file_id,'ni',i_num_cols);
CATCH, /CANCEL

;
; Put netCDF file out define mode and into data mode for writing:
;

CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'write_modis_global_attributes: ERROR, Cannot put netCDF file out of define mode and into data mode.'
    print, i_filename
    status = FAILURE;
    ; Must return immediately.
    return, status
endif

ncdf_control, i_file_id, /ENDEF
CATCH, /CANCEL

; ---------- Close up shop ---------- 
return, status
end
