;  Copyright 2010, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

PRO idl_many_jobs_one_process_executor, $
      i_filelist_name, $
      i_sentinel_job_name, $
      i_seconds_since_1970

; Program receives a filename containing a list of IDL program calls and execute them via the EXECUTE function in the order read.
; After all the programs are executed, an empty file with the name i_sentinel_job_name will be created on the file system representing
; that all the programs are finished. 
;
; Assumptions:
;
; 1.  The strings representing the IDL program call contains the correct format. 
; 2.  No other error checking is done on the string in.  It is assume that the string contains valid program call and
;     the correct number of parameters.
;

    args = COMMAND_LINE_ARGS(COUNT = argCount);

;print, 'argcount ', argCount;
    IF argCount EQ 0 THEN BEGIN
        PRINT, 'idl_many_jobs_one_process_executor:No input arguments specified'
        RETURN
    ENDIF ELSE BEGIN
;print, 'args ', size(args);
;help,    args[0];
        i_filelist_name = args[0]
        i_sentinel_job_name = args[1];
        i_seconds_since_1970 = args[2];
    ENDELSE


tstart = systime(1)
;print, 'idl_many_jobs_one_process_executor: execution start time:', systime()

;exit;

@load_maf_constants

over_all_status = SUCCESS;

; Set a time to check against how long a program should take.

MAX_TIME_IDL_JOB_SHOULD_TAKE = 40 * 60;  Calculate the maximum time an IDL job should take.  Any longer, we send the operator an email.  Forty minutes is a good batch size.
                                      ;  Note: We have seen batch taking longer than 22 minutes if there are alot of files to filled.
                                      ;  Here is an example:

; 1271227650,Tue Apr 13 23:47:30 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42240.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.93, lanina
; 1271227651,Tue Apr 13 23:47:31 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42217.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.16, lanina
; 1271227655,Tue Apr 13 23:47:35 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42215.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.15, lanina
; 1271227656,Tue Apr 13 23:47:36 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42249.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.18, lanina
; 1271227656,Tue Apr 13 23:47:36 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42226.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.15, lanina
; 1271227658,Tue Apr 13 23:47:38 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42244.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 6.15, lanina
; 1271227659,Tue Apr 13 23:47:39 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42236.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.26, lanina
; 1271227659,Tue Apr 13 23:47:39 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42228.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.23, lanina
; 1271227659,Tue Apr 13 23:47:39 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42225.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.30, lanina
; 1271227661,Tue Apr 13 23:47:41 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42249.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.22, lanina
; 1271227661,Tue Apr 13 23:47:41 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_4,2 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 2.83, lanina
; 1271227662,Tue Apr 13 23:47:42 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42227.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.20, lanina
; 1271227669,Tue Apr 13 23:47:49 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42246.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1.02, lanina
; 1271227670,Tue Apr 13 23:47:50 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100414-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42259.dat-po0-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 18.93, lanina
; 1271227670,Tue Apr 13 23:47:50 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42248.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 11.74, lanina
; 1271227672,Tue Apr 13 23:47:52 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42250.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 2.35, lanina
; 1271227673,Tue Apr 13 23:47:53 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42231.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.76, lanina
; 1271227675,Tue Apr 13 23:47:55 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42250.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1.07, lanina
; 1271227675,Tue Apr 13 23:47:55 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_7,2 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 7.56, lanina
; 1271227681,Tue Apr 13 23:48:01 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42242.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 15.78, lanina
; 1271227696,Tue Apr 13 23:48:16 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100411-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42222.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 23.07, lanina
; 1271227698,Tue Apr 13 23:48:18 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42231.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.36, lanina
; 1271227698,Tue Apr 13 23:48:18 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_8,2 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 26.43, lanina
; 1271227704,Tue Apr 13 23:48:24 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42248.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 46.25, lanina
; 1271227704,Tue Apr 13 23:48:24 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_3,2 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 48.51, lanina
; 1271229040,Wed Apr 14 00:10:40 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100414-AVHRR18_G-NAVO-L2P-SST_s0339_e0534-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1358.60, lanina
; 1271229041,Wed Apr 14 00:10:41 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100414-AVHRR18_G-NAVO-L2P-SST_s0339_e0534-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-wind_speed-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1370.05, lanina
; 1271229043,Wed Apr 14 00:10:43 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42246.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.34, lanina
; 1271229043,Wed Apr 14 00:10:43 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_6,2 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1378.01, lanina
; 1271229063,Wed Apr 14 00:11:03 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100413-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42244.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 20.27, lanina
; 1271229063,Wed Apr 14 00:11:03 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42236.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.32, lanina
; 1271229064,Wed Apr 14 00:11:04 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_2,3 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1411.64, lanina
; 1271229068,Wed Apr 14 00:11:08 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100414-AVHRR18_G-NAVO-L2P-SST_s0150_e0345-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_ice_fraction-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1406.09, lanina
; 1271229068,Wed Apr 14 00:11:08 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100414-AVHRR18_G-NAVO-L2P-SST_s0150_e0345-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-wind_speed-ecmwf.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1397.92, lanina
; 1271229080,Wed Apr 14 00:11:20 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42240.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 0.18, lanina
; 1271229086,Wed Apr 14 00:11:26 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100412-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42242.dat-po1-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 16.26, lanina
; 1271229086,Wed Apr 14 00:11:26 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_5,2 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1424.74, lanina
; 1271229113,Wed Apr 14 00:11:53 2010,/data/devscratch/IO/data/__clusterjob.1271227604/20100414-AMSRE-REMSS-L2P-amsr_l2b_rt_v05_r42259.dat-po0-v01.nc,/home/qchau/ancillary_processing/ancillary/maf-sea_surface_temperature-fnmoc.nc,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 32.36, lanina
; 1271229113,Wed Apr 14 00:11:53 2010,ENTIRE_JOB,/home/qchau/task_farm_output/__clusterjob.1271227604/tmp_idl_partial_job_complete_1,3 fillings,ANCILLARY_FILLING,OVERALL_TOTAL_TIME: 1463.54, lanina


; Read the list of tasks from file into memory.

OPENR, file_unit, i_filelist_name, ERROR = err_no, /GET_LUN;

; If err_no is nonzero, something happened. Print the error message to
; the standard error file (logical unit -2):
if  (err_no NE 0) then begin
    PRINTF, -2, 'idl_many_jobs_one_process_executor:' + !ERROR_STATE.MSG
    over_all_status = FAILURE;

    l_status = error_log_writer($
               'idl_many_jobs_one_process_executor',$
               'Failed to open for input file:' + i_filelist_name);
    ; Nothing to do, we exit this program.
    return
endif

a_task_string = ""; Note: This assignment is very important to tell IDL that were are dealing with text when we are reading at READF function below.

program_start_time = SYSTIME(/SECONDS);
num_fillings = 0;

while (~eof(file_unit)) do begin
    ;
    ; Get one string from file.  Assumes each string is a valid IDL procedure call.
    ; No error handling and we hope the string is a valid IDL call.
    ;

    READF, file_unit, FORMAT='(A)',a_task_string;

    ; Perform an important step before executing the IDL program:
    ;
    ; Note: Because the Ancillary Filling checks for this file "$ENV{'GAPHOTDIRS'}/$clusterjob_dir/JOB_RUNNING") last access time
    ;       and comparing it with the time in GAPRUNNINGTHRESH, we help the code by updating the time by touching it.

    runningjob_filename = GETENV('GAPHOTDIRS') + "/__clusterjob." + i_seconds_since_1970 + "/JOB_RUNNING";

    SPAWN, 'touch ' + runningjob_filename;

    ; Run it.

;print, 'idl_many_jobs_one_process_executor: pre  EXECUTE[',a_task_string,']';

    tstart = systime(1)
 
    run_status = EXECUTE(a_task_string,1,1);
    num_fillings = num_fillings + 1;

;print, 'idl_many_jobs_one_process_executor: post EXECUTE[',a_task_string,']';

    ; Make sure the status is good.

    if (run_status NE 1) then begin
        print, "idl_many_jobs_one_process_executor: ERROR, The below procedure failed:";
        print, a_task_string

        l_status = error_log_writer($
                   'idl_many_jobs_one_process_executor',$
                   'The below procedure failed:' + a_task_string);

        donotcare = idl_email_ops_to_report_error(idl_prepare_email_body(a_task_string));

    endif

    ; Email the operator if the program took longer than expected.
    
    tduration = (systime(1) - tstart);

    if (tduration GT MAX_TIME_IDL_JOB_SHOULD_TAKE) then begin
        warning_message = "This task {" + a_task_string + "} although completed, has taken longer than expected.  Seconds elapsed time: " + STRTRIM(STRING(tduration),2) + ", MAX_TIME_IDL_JOB_SHOULD_TAKE: " + STRTRIM(STRING(MAX_TIME_IDL_JOB_SHOULD_TAKE),2) +$
                          ".  This message was generated from function idl_many_jobs_one_process_executor().";
        donotcare = idl_email_ops_to_report_error(idl_prepare_email_body(warning_message));
    endif

endwhile

;
; Close up shop.
;

FREE_LUN, file_unit;

;
; Log run statistics to log file.
;

program_elapsed_time = SYSTIME(/SECONDS) - program_start_time; 
;print, "idl_many_jobs_one_process_executor: program_elapsed_time (in seconds) = " + STRING(program_elapsed_time);

if (i_sentinel_job_name NE "") then begin
    do_not_care = write_to_processing_log("ENTIRE_JOB," + i_sentinel_job_name + "," + STRTRIM(STRING(num_fillings),2) + " fillings" ,$
                                         ("ANCILLARY_FILLING"+ "," + "OVERALL_TOTAL_TIME: " + $
                                           STRING(program_elapsed_time,FORMAT='(f0.2)')))
endif else begin
    do_not_care = write_to_processing_log("ENTIRE_JOB"  + "," + STRTRIM(STRING(num_fillings),2) + " fillings",$
                                         ("ANCILLARY_FILLING"+ "," + "OVERALL_TOTAL_TIME: " + $
                                           STRING(program_elapsed_time,FORMAT='(f0.2)')))
endelse


; This is a special case.
;
; When all the jobs for this granule are done, we want to signify that this particular partial job is done.
; If string i_sentinel_job_name is empty, we don't do anything because the user does not intend to have anything done.

if (i_sentinel_job_name NE "") then begin
    final_spawn_command = 'touch ' + i_sentinel_job_name;
;    print, 'idl_many_jobs_one_process_executor: final SPAWN command [' + final_spawn_command + "]";


    ; Create an empty file on the file system via the SPAWN command.
    SPAWN, final_spawn_command, spawn_result, spawn_error; 
    if (STRLEN(spawn_error) GT 0) then begin
        donotcare = idl_email_ops_to_report_error(idl_prepare_email_body('touch ' + i_sentinel_job_name));
    endif
endif

;print, 'Overall execution time:', systime(1) - tstart
;help,/heap

;
; Close up shop.
;

END
