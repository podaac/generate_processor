#!/usr/local/bin/perl
#
#  Copyright 2008, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine returns 1 if the name to check appears in the Error File Registry, 0 else.
#
#------------------------------------------------------------------------------------------------


do "$GHRSST_PERL_LIB_DIRECTORY/get_error_file_registry_filename.pl";

sub has_file_had_processing_error_before {

    # Get input(s):

    my $i_processing_type   = uc(shift);
    my $i_filename_to_check = shift; 

    #
    # Returned variable(s).
    #

    my $r_file_processed = 0;

    # Determine which EFR to use depends on the processing type.

    my $l_error_file_registry_filename = get_error_file_registry_filename($i_processing_type);

    if ($l_error_file_registry_filename eq "") {
        print "has_file_had_processing_error_before:ERROR, Registry file name is empty string.\n";
	print "has_file_had_processing_error_before:i_processing_type = [$i_processing_type]\n";
        return($r_file_processed);
    }

    # Return immediately if the name to check is empty.

    if ($i_filename_to_check eq "") {
        print "has_file_had_processing_error_before:ERROR, File name to check is empty string.\n";
	print "has_file_had_processing_error_before:i_processing_type = [$i_processing_type]\n";
        return($r_file_processed);
    }


    # Create an empty file if it does not exist already.

#print "has_file_had_processing_error_before: l_error_file_registry_filename = [$l_error_file_registry_filename]\n";

    if (!(-e $l_error_file_registry_filename)) {
        print "has_file_had_processing_error_before:INFO, No file error registry exist yet.  Creating an empty one [$l_error_file_registry_filename]\n";
        system("touch $l_error_file_registry_filename");
    }

    # Get the number of lines containing the i_filename_to_check

    my @wc_line = ();
    @wc_line = readpipe("grep -c -e $i_filename_to_check $l_error_file_registry_filename");

    # Remove trailing blanks and all blanks between.

    chomp($wc_line[0]);
    $wc_line[0] =~ s/ //g;

#print "$i_filename_to_check wc_line[0] = $wc_line[0]\n";

    if ($wc_line[0] eq "0") {
        $r_file_processed = 0;
    } else {
        $r_file_processed = 1;
    }

#    print "has_file_had_processing_error_before: i_filename_to_check = $i_filename_to_check\n";
#    print "has_file_had_processing_error_before: r_file_processed = $r_file_processed\n";

    return ($r_file_processed);
}
