#!/usr/local/bin/perl

#  Copyright 2008, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine clear out staged MODIS datasets.  This typically is called if the IDL codes failed
# to run successfully.
#
# Assumption(s):
#
#   1) TBD. 
#
#------------------------------------------------------------------------------------------------

use File::Basename;  # Use in parsing the full file name.

sub clear_staged_modis_datasets {


    # Returned status.  Value of 0 means ok, 1 means bad.

    my $o_status = 0;

    #
    # Get input.
    #

    my $ref_uncompressed_hdf_filelist  = shift; 
    my $i_scratch_area                 = shift;
    my $i_processing_type              = shift;  # Either QUICKLOOK or REFINED
    my $ref_l2p_core_name_only_filelist = shift;

    # 
    # Local variables.  The @$ on the Right Hand Side (RHS) dereference the reference.
    #

    my @l_uncompressed_hdf_filelist  = @$ref_uncompressed_hdf_filelist;
    my @l_l2p_core_name_only_filelist = @$ref_l2p_core_name_only_filelist;
    my $num_files_to_clear = @l_uncompressed_hdf_filelist;

    my $debug_flag = 1;

    # For every file in the list, look for a staged file in scratch directory and current_jobs directory.

    my $name_only = "";
    my $directory_path = "";
    my $destination_name = "";
    my $current_job_filename = "";
    my $num_datasets_successfully_cleared = 0;

    if ($debug_flag) {
        print "clear_staged_modis_datasets: l_uncompressed_hdf_filelist[";
        print @l_uncompressed_hdf_filelist; 
        print "]\n";
        print "clear_staged_modis_datasets: l_l2p_core_name_only_filelist[";
        print @l_l2p_core_name_only_filelist; 
        print "]\n";
        print "clear_staged_modis_datasets: num_files_to_clear [$num_files_to_clear]\n";
    }

    for ($count = 0; $count < $num_files_to_clear; $count++) {
        chomp($l_uncompressed_hdf_filelist[$count]);  # Remove the carriage return.

        # Parse the name.
        ($name_only,$directory_path) = fileparse($l_uncompressed_hdf_filelist[$count]);

        # Form the destination name.
        $destination_name = $i_scratch_area . "/" . $name_only;

        # Form the empty file in current_jobs directory.
        $current_job_filename = $i_scratch_area ."/current_jobs/" . $l_l2p_core_name_only_filelist[$count] . ".bz2";
 
        if ($debug_flag) {
            print "clear_staged_modis_datasets: name_only            [$name_only]\n";
            print "clear_staged_modis_datasets: destination_name     [$destination_name]\n";
            print "clear_staged_modis_datasets: current_job_filename [$current_job_filename]\n";
        }
        #
        # Remove the staged files.
        #

        if (-e $destination_name) {
            use File::Copy;
            # Before removing the staged file, place it in quarantine so operator can inspect it.
            my $quarantine_directory = $ENV{SCRATCH_AREA} . "/quarantine";
            if (not (-e $quarantine_directory)) {
                mkdir($quarantine_directory); 
            }
            copy($destination_name,$quarantine_directory);
            if ($debug_flag) {
                print "clear_staged_modis_datasets:INFO, Copy file $destination_name to [$quarantine_directory]\n";
            }

            if ($debug_flag) {
                print "clear_staged_modis_datasets:INFO, Removing staged [$destination_name]\n";
            }
            unlink($destination_name);

            if ($debug_flag) {
                print "clear_staged_modis_datasets:INFO, Removing current_job [$current_job_filename].\n";
            }
            unlink($current_job_filename);

            # Remove the staged Quicklook as well if processing type is REFINED.

            if ($i_processing_type eq REFINED) {
                my $staged_filled_quicklook_filename = $i_scratch_area . "/" . $l_l2p_core_name_only_filelist[$count]; 
                if ($debug_flag) {
                    print "clear_staged_modis_datasets:INFO, Removing filled quicklook [$staged_filled_quicklook_filename]\n";
                }
                unlink($staged_filled_quicklook_filename);
            }

            $num_datasets_successfully_cleared += 1;
        }
    } # endfor ($count = 0; $count < $num_files_to_clear; $count++)

    #
    # Report status of staging.
    #
    print "clear_staged_modis_datasets: num_datasets_successfully_cleared = $num_datasets_successfully_cleared\n";

    # ---------- Close up shop ----------
    return ($o_status);

} # end sub clear_staged_modis_datasets
