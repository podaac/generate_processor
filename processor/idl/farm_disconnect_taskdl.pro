;  Copyright 2007, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: farm_disconnect_taskdl.pro,v 1.1 2007/05/01 17:39:40 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CVS

PRO farm_disconnect_taskdl

; Program provides a way for other IDL program/procedure to disconnect to the TaskDL library.
; TaskDL is a library of IDL functions to spawn IDL workers on the slave nodes from the main
; node to take advantage of idling CPU resources.

; Assumption: 
; 
; 1. The static variable s_farm_handle is set
;

; These common variables allow other related functions to use the shared TaskDL objects.
; 

COMMON SHARE_MEMORY, s_farm_handle;    Static s_farm_handle is shared between IDL subroutines.

tstart = systime(1)
print, 'farm_disconnect_taskdl: execution start time:', systime() 

SUCCESS = 0;
FAILURE = 1;

over_all_status = SUCCESS;

; Create a catch block to catch error(s)
CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'farm_disconnect_taskdl: ERROR, Failed in close_session.'

    l_status = error_log_writer($
          'farm_disconnect_taskdl',$
          'Failed in close_session.');

    over_all_status = FAILURE;
      ; From reference manual:
      ;
      ; "Remove all tasks from all queues on the TaskDL server.  
      ; This creates a "clean slate" to start an entirely new workflow or to recover from errors.
      ;

      s_farm_handle->reset_server
      print, 'farm_disconnect_taskdl: obj_destroy() called' 
      obj_destroy, s_farm_handle
      CATCH, /CANCEL
    ; Must return immediately.
    return
endif

; 
; The farm is closed for the winter.
;
; 1. close the session,
; 2. terminate the tdl server if all tasks are completed.
;

s_farm_handle->close_session
CATCH, /CANCEL

; Create a catch block to catch error(s)
CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'farm_disconnect_taskdl: ERROR, Failed in obj_destroy.'

    l_status = error_log_writer($
          'farm_disconnect_taskdl',$
          'Failed in obj_destroy.');

    over_all_status = FAILURE;
    ; Must return immediately.
    return
endif

;
; Close up the shop
;

help,/heap
print, 'farm_disconnect_taskdl: obj_destroy() called' 
obj_destroy, s_farm_handle
CATCH, /CANCEL
print, 'Overall execution time:', systime(1) - tstart
help,/heap

END
