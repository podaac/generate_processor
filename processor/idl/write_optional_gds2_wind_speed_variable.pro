;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION write_optional_gds2_wind_speed_variable,$
             i_out_filename,$
             long_attributes_values

; Function write optional 'wind_speed' variable to NetCDF file in GDS2 format.
; Note, that the content of the variable is just fill values since the variable being written because the GDS2 format requires it.
;
; Assumption(s):
;
;   1.  The output file has been created previously.

@modis_data_config.cfg

o_status = SUCCESS;

routine_name = "write_optional_gds2_wind_speed_variable";
debug_module = "write_optional_gds2_wind_speed_variable:";

debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2P_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif

clear_memory_flag = 1;

;
; Write wind_speed variable.
;
dataset_name = 'wind_speed';

variable_array = BYTARR(long_attributes_values[Pixels_per_Scan_Line_index],$
                        long_attributes_values[Number_of_Scan_Lines_index]);

data_type      = 'BYTE';
standard_name  = "wind_speed";
long_name      = '10m wind speed';
units          = 'm s-1';
add_offset     = 25.0;
scale_factor   = 0.2;
valid_min      = -127b;
valid_max      =  127b;
fill_value     = -128b;
comment        = "Wind at 10 meters above the sea surface"; These wind speeds were created by the ECMWF and represent winds at 10 metres above the sea surface";
coordinates    = "lon lat";
source         = "TBD.  Placeholder.  Currently empty"; ECMWF_Analysis_V2" ;
grid_mapping   = "TBD"; "polar_stereographic" ;
time_offset    = 2.;
height         = '10 m';
variable_array = variable_array + fill_value;  Set all to fill value since we do not have any valid value.

if (debug_mode) then begin
    msg = debug_module + 'INFO:' + 'Writing variable ' + dataset_name + ' to file ' + i_out_filename
    print, msg;
endif

o_status = write_gds2_variable(i_out_filename,$
                               variable_array,$
                               dataset_name,$
                               standard_name,$
                               units,$
                               fill_value,$
                               data_type,$
                               valid_min,$
                               valid_max,$
                               comment,$
                               long_name,$
                               scale_factor,$
                               add_offset,$
                               source,$
                               coordinates,$
                               undefined_flag_values,$
                               undefined_flag_meanings,$
                               grid_mapping,$
                               time_offset,$
                               height);

if (clear_memory_flag) then begin
    tempvar = SIZE(TEMPORARY(variable_array)); Clear memory
endif
return, o_status;
END
