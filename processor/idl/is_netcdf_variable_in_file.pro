;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION is_netcdf_variable_in_file,$
         i_netcdf_filename,$
         i_variable_name

; Function return 1 if the variable named exist in the given NetCDF file.
;
; Assumptions:
;
;   1. The input NetCDF file exist.
;
;------------------------------------------------------------------------------------------------

; Load constants.

@data_const_config.cfg

; Define returned variable(s).

o_variable_found_in_file_flag = SUCCESS;

;
; Open the NetCDF file as input. 
;
CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'is_netcdf_variable_in_file: ERROR, Cannot open file for input ' + i_netcdf_filename;
    o_variable_found_in_file_flag = FAILURE;
    ; Must return immediately.
    return, o_variable_found_in_file_flag
endif
file_id= NCDF_OPEN(i_netcdf_filename,/NOWRITE);
CATCH, /CANCEL

; Get the list of all variables in file.

CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'is_netcdf_variable_in_file: ERROR, Cannot open file for input ' + i_netcdf_filename;
    o_variable_found_in_file_flag = FAILURE;
    ; Must return immediately.
    return, o_variable_found_in_file_flag
endif
file_info_structure = NCDF_INQUIRE(file_id);
CATCH, /CANCEL

num_variables = file_info_structure.NVARS;

; Look for all the variables names to see if one matches the one we want to look for.

variable_found_flag = 0;
variable_index      = 0;

while (variable_index LT num_variables) AND (variable_found_flag EQ 0) do begin

    CATCH, error_status
    if (error_status NE 0) then begin
        CATCH, /CANCEL
        print, 'is_netcdf_variable_in_file: ERROR, Cannot open file for input ' + i_netcdf_filename;
        o_variable_found_in_file_flag = FAILURE;
        ; Must return immediately.
        return, o_variable_found_in_file_flag
    endif

    variable_structure = NCDF_VARINQ(file_id,variable_index);
    CATCH, /CANCEL

    if (variable_structure.NAME EQ i_variable_name) then begin
        variable_found_flag = 1;
    endif
   
    variable_index = variable_index + 1;
endwhile

if (variable_found_flag NE 1) then begin
    o_variable_found_in_file_flag = FAILURE; 
endif

; ---------- Close up shop ---------- 

; Don't forget to close the opened input file.
CATCH, error_status
if (error_status NE 0) then begin
    CATCH, /CANCEL
    print, 'is_netcdf_variable_in_file: ERROR, Cannot close input file ' + i_netcdf_filename;
    o_variable_found_in_file_flag = FAILURE;
    ; Must return immediately.
    return, o_variable_found_in_file_flag
endif
NCDF_CLOSE, file_id;
CATCH, /CANCEL

return, o_variable_found_in_file_flag;
END
