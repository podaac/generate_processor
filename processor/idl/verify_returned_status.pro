;  Copyright 2006, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: verify_returned_status.pro,v 1.2 2007/06/15 19:45:08 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CVS
; New Request #xxxx

FUNCTION verify_returned_status,$
         i_filename,$
         i_actual_status,$
         i_expected_status,$
         i_error_message

; Function reports the i_error_message to screen if i_actual_status is not the same as
; i_expected_status.
;
; The string GHRSST_PROCESSING_ERROR in the output string is to allow a later program
; to grep for this string to parse for the file name in error and the reason behind
; the error.
;
; Assumptions:
;
;   1. The datatype of the two status variables are of the same type.
;   2. The error message is a valid IDL string.
;   3. This function will always return SUCCESS status.
;

;------------------------------------------------------------------------------------------------

; Load constants.

@data_const_config.cfg

r_status = SUCCESS;

;
; Compare the two status'es and print the error message.
;

if (i_actual_status NE i_expected_status) then begin
    print, 'GHRSST_PROCESSING_ERROR ', i_filename, ' ', i_error_message;


    ; Set the fields.

    l_job_id         = LONG(SYSTIME(/SECONDS));
    l_date_processed = SYSTIME();

    ;
    ; Create the object reference to ghrsst_error_logger
    ;
    
    l_status = create_error_logger($
                   l_job_id, $
                   l_date_processed, $
                   i_filename, $
                   i_error_message, $
                   lr_logger_ref);

    ;
    ; Print the error entry to log file.
    ;

    lr_logger_ref->write_to_log_file;

    ;
    ; Destroy the object
    ;

    OBJ_DESTROY, lr_logger_ref;

;    print, 'after OBJ_DESTROY';
;    help,/heap

    ; Report the sigevent.

    routine_name= "convert_modis_from_hdf_to_netcdf"; 
    msg_type = "error";
    msg = i_error_message + " from file " + i_filename; 
    i_data = "";
    donotcare = wrapper_ghrsst_notify_operator($
                        routine_name,$
                        msg_type,$
                        msg,$
                        i_data);

endif

return, r_status;
end
