;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION read_float_variables_from_netcdf_file,$
             i_filename,$
             o_float_attributes_values,$
             i_test_parameter

;------------------------------------------------------------------------------------------------

; Load constants.

@modis_data_config.cfg

; Define local variables.

r_status = SUCCESS;

routine_name = 'read_float_variables_from_netcdf_file';

; Get the DEBUG_MODE if it is set.

debug_module = 'read_float_variables_from_netcdf_file::';
debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2P_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif


; Set our test parameter based on what's being passed in,
TEST_PARAMETER = "";
if (N_ELEMENTS(i_test_parameter) NE 0) then begin
    TEST_PARAMETER = i_test_parameter;
endif

; Get just the file name without the directory.

splitted_string = strsplit(i_filename, "/", /REGEX, /EXTRACT);
num_substrings = SIZE(splitted_string,/N_ELEMENTS); 
in_filename_only = splitted_string[num_substrings-1];

; For reading from NetCDF file, the names of the attributes does not contain spaces ' ' but underscore '_'.
; Since the array float_attributes_names is already defined in modis_data_config.cfg with spaces, we re-define it here with underscores.

;
; List of FLOAT global attributes to read from NetCDF file.
;

float_attributes_names = ['Northernmost_Latitude',$
                          'Southernmost_Latitude',$
                          'Easternmost_Longitude',$
                          'Westernmost_Longitude'];


; Array to store these FLOAT values.  Note that this cannot be used to read character variables.
; The array float_attributes_names is defined in modis_data_config.cfg file.

o_float_attributes_values = FLTARR(size(float_attributes_names,/N_ELEMENTS));

;
; Read all the FLOAT global attributes.
;

for i = 0, (size(o_float_attributes_values,/N_ELEMENTS) - 1) do begin

    ; Read one attribute at a time.
    r_status = read_netcdf_global_attribute(i_filename,float_attributes_names[i],r_float_attribute_value);

    if (TEST_PARAMETER EQ "BAD_FLOAT_GLOBAL_ATTRIBUTE_READ") then begin
        r_status = FAILURE;
    endif

    ; MODIS_L2P_ERROR_STEP 4. If bounding box cannot be read, ERROR sigevent thrown, returns. 

    if (r_status NE SUCCESS) then begin
        status = FAILURE;
        msg_type = "error";
        msg = "Cannot read float global attribute " + float_attributes_names[i] + " from file " + i_filename;
        print, msg;
        l_status = error_log_writer(routine_name,msg);

        ; Note that the sigevent is not thrown here but by the parent function that calls this.

        ; Must return immediately.
        return, status
    endif

    ; Do a sanity check to see if the variable is an empty string or not a number.

    if ((STRLEN(r_float_attribute_value) EQ 0) OR (is_variable_a_number(r_float_attribute_value) EQ 0)) then begin
        status = FAILURE;
        msg_type = "error";
        msg = "Cannot read convert float global attribute " + float_attributes_names[i] + " with value " + r_float_attribute_value + " from file " + i_filename;
        print, msg;
        l_status = error_log_writer(routine_name,msg);

        ; Note that the sigevent is not thrown here but by the parent function that calls this.

        ; Must return immediately.
        return, status
    endif  

    ; If got to here, the value is good.
    ; Save it.
    o_float_attributes_values[i] = FLOAT(r_float_attribute_value);
endfor
return, r_status
end
