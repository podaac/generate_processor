;  Copyright 2007, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: convert_modis_and_make_meta.pro,v 1.3 2007/06/18 17:40:19 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM 

FUNCTION convert_modis_and_make_meta,$
    i_data_filename            ,$
    i_out_filename             ,$ 
    i_start_time_array_element ,$ 
    i_meta_filename            ,$ 
    i_convert_to_kelvin        ,$
    i_processing_type          ,$
    i_L2P_registry             ,$
    i_test_parameter

; Program read from file containing a list of datasets to process, read each file
; and convert them from HDF format to NetCDF format with some processing. 

;
; Assumptions:
;
;   1. TBD 
;
;------------------------------------------------------------------------------------------------

; Load constants.  No ending semicolon is required.

@modis_data_config.cfg

over_all_status = SUCCESS;

debug_module = 'convert_modis_and_make_meta:';
routine_name = 'convert_modis_and_make_meta:';
debug_flag = 0;

if (STRUPCASE(GETENV('GHRSST_MODIS_L2P_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_flag = 1;
endif

if (debug_flag) then begin
    print, '------------------------------------------------------------';
    print, 'convert_modis_and_make_meta: data_filename = ' + i_data_filename;
    print, 'convert_modis_and_make_meta: out_filename  = ' + i_out_filename;
endif

; Save the original_out_filename so we can delete the job.

original_out_filename = i_out_filename;

create_gds2_formatted_file_flag = 1;  By default, set this flag to 1 and reset back to 0 if CREATE_MODIS_L2P_IN_GDS2_FORMAT is not set or blank.

if ((GETENV('CREATE_MODIS_L2P_IN_GDS2_FORMAT') EQ 'false') OR (GETENV('CREATE_MODIS_L2P_IN_GDS2_FORMAT') EQ '')) then begin
    create_gds2_formatted_file_flag = 0;
endif

conversion_module_used = '';  Save the name of the conversion module so we can use it to report any errors.

if (create_gds2_formatted_file_flag EQ 0) then begin
    if (STRPOS(i_data_filename,".nc") GE 0) then begin
        ; Convert the MODIS dataset file from NetCDF to NetCDF. 
        conversion_module_used = 'convert_modis_from_netcdf_to_netcdf';
        status_convert = convert_modis_from_netcdf_to_netcdf(i_data_filename,i_out_filename,$
                                                  i_start_time_array_element,i_convert_to_kelvin,$
                                                  i_processing_type,o_day_or_night);
    endif else begin
        ; Convert the MODIS dataset file from HDF to NetCDF. 
        conversion_module_used = 'convert_modis_from_hdf_to_netcdf';
        status_convert = convert_modis_from_hdf_to_netcdf(i_data_filename,i_out_filename,$
                                                  i_start_time_array_element,i_convert_to_kelvin,$
                                                  i_processing_type,o_day_or_night);
    endelse
endif

if (create_gds2_formatted_file_flag EQ 1) then begin
    ; Because we don't want to real file to appear until the conversion is finished, we create a temporary output file
    ; and then rename it to the actual file when finished.

    out_name_only = FILE_BASENAME(i_out_filename);
    out_directory_only = FILE_DIRNAME(i_out_filename); 
    hidden_name_only = '.' + out_name_only; Add a dot in front of the name to make it hidden from directory listing.
    temporary_out_filename = out_directory_only + '/.' + out_name_only;  Add a dot in front of the name to make it hidden from directory listing.

    if (STRPOS(i_data_filename,".nc") GE 0) then begin
        ; Convert the MODIS dataset file from NetCDF to NetCDF in GDS2 format. 
        if (GETENV('GHRSST_L2P_VIIRS_RUN_MODE') eq 'true') then begin
            conversion_module_used = 'convert_viirs_from_netcdf_to_gds2_netcdf';
            status_convert = convert_viirs_from_netcdf_to_gds2_netcdf(i_data_filename,temporary_out_filename,$
                                                      i_start_time_array_element,i_convert_to_kelvin,$
                                                      i_processing_type,o_day_or_night,i_test_parameter);
        endif else begin
        conversion_module_used = 'convert_modis_from_netcdf_to_gds2_netcdf';
        status_convert = convert_modis_from_netcdf_to_gds2_netcdf(i_data_filename,temporary_out_filename,$
                                                  i_start_time_array_element,i_convert_to_kelvin,$
                                                  i_processing_type,o_day_or_night,i_test_parameter);
        endelse
    endif else begin
        ; Convert the MODIS dataset file from HDF to NetCDF in GDS2 format. 
        conversion_module_used = 'convert_modis_from_hdf_to_gds2_netcdf';
        status_convert = convert_modis_from_hdf_to_gds2_netcdf(i_data_filename,temporary_out_filename,$
                                                  i_start_time_array_element,i_convert_to_kelvin,$
                                                  i_processing_type,o_day_or_night,i_test_parameter);
    endelse


    ; Rename the temporary file to the actual file.
    if FILE_TEST(temporary_out_filename) then begin
        if (debug_flag) then begin
            print, routine_name + 'FILE_MOVE, ' + temporary_out_filename + ',' +  i_out_filename;
        endif
        FILE_MOVE, temporary_out_filename, i_out_filename, /OVERWRITE;
    endif else begin
        status_convert = FAILURE;
    endelse
endif

; Now, rename the variable i_out_filename so we have the correct name.

; 20120709-MODIS_A-JPL-L2P-A2012191053000.L2_LAC_GHRSST_D-v01.nc if Day
; 20120709-MODIS_A-JPL-L2P-A2012191053000.L2_LAC_GHRSST_N-v01.nc if Night
; 20120709-MODIS_A-JPL-L2P-A2012191053000.L2_LAC_GHRSST_N-v01.nc if Mixed
;
; Also, don't forget to rename the metadata files too.

if ((status_convert EQ SUCCESS) AND (create_gds2_formatted_file_flag EQ 0)) then begin
    if (debug_flag) then begin
        print, routine_name + 'rename_output_file_to_gds1_format: PRE_CALL i_out_filename ' + i_out_filename + ' i_meta_filename ' + i_meta_filename;
    endif

    o_status =  rename_output_file_to_gds1_format($
                    o_day_or_night,$
                    i_out_filename,$
                    i_meta_filename,$
                    o_out_filename,$
                    o_meta_filename);

    if (debug_flag) then begin
        print, routine_name + 'rename_output_file_to_gds1_format: POST_CALL i_out_filename ' + i_out_filename + ' o_out_filename ' + o_out_filename + ' i_meta_filename ' + i_meta_filename + ' o_meta_filename ' + o_meta_filename;
    endif
endif

if ((status_convert EQ SUCCESS) AND (create_gds2_formatted_file_flag EQ 1)) then begin
    if (debug_flag) then begin
        print, routine_name + 'rename_output_file_to_gds2_format: PRE_CALL i_out_filename = ' + i_out_filename;
    endif
    o_status =  rename_output_file_to_gds2_format($
                    o_day_or_night,$
                    i_out_filename,$
                    o_out_filename);
    if (debug_flag) then begin
        print, routine_name + 'rename_output_file_to_gds2_format: POST_CALL i_out_filename = ' + i_out_filename + ' o_out_filename = ' + o_out_filename;
    endif
endif

if (status_convert NE SUCCESS) then begin

    ; Even if the conversion was not successful, we must convert the output name if the create_gds2_formatted_file_flag is 1.
;    if (create_gds2_formatted_file_flag) then begin
;        donotcare = build_output_file_name_in_gds2_format(o_day_or_night,i_out_filename,o_out_filename);
;        i_out_filename = o_out_filename;
;    endif 
    print, 'convert_modis_and_make_meta: Failed in ' + conversion_module_used + ' function.  status_convert is ', status_convert
    print, 'convert_modis_and_make_meta: i_data_filename       = ', i_data_filename;
    print, 'convert_modis_and_make_meta: i_out_filename        = ', i_out_filename;
    print, 'convert_modis_and_make_meta: start_time_array_element = ', i_start_time_array_element;
    over_all_status = FAILURE;

    ; If the file was not found, we only remove the staged data set but do not append
    ; to the file registry.  This way, this same file can be put in the pipe again
    ; to be processed in case something went wrong with the current run. 

    if (status_convert EQ FILE_NOT_FOUND_STATUS) then begin

        l_erase_status = erase_one_staged_dataset($
                             i_data_filename, $
                             i_processing_type, $
                             i_out_filename);

        l_remove_status = erase_current_job(GETENV('MODIS_CURRENT_JOBS_DIR'), $
                              FILE_BASENAME(original_out_filename) + ".bz2");

    endif else begin

        ; Quarantine (make a copy) the staged data file so we can inspect it later.

        quarantine_status = quarantine_one_staged_dataset(i_data_filename);

        ; Any other type of errors, we remove the staged data file and also append an entry
        ; to the registry.

        l_cleanup_status = perform_modis_cleanup_failed_processing($
                       'convert_modis_and_make_meta',$
                       'Failed in ' + conversion_module_used + ' :' + i_data_filename,$
                       i_data_filename                    ,$
                       i_processing_type                  ,$
                       i_out_filename                     ,$
                       i_L2P_registry);
    endelse

endif else begin

  ; Only create the metadata file CREATE_MODIS_L2P_IN_GDS2_FORMAT is false or blank space (not set).
  if (create_gds2_formatted_file_flag EQ 0) then begin
    ;
    ; Create the metadata to go with the newly created MODIS L2P Core file.
    ;

    status_make_meta = make_modisl2p_meta(i_out_filename,i_meta_filename);

    if (status_make_meta NE SUCCESS) then begin
        print, 'convert_modis_and_make_meta: Failed in make_modisl2p_meta().  status is ', status_make_meta
        print, 'convert_modis_and_make_meta: data_filename       = ', i_data_filename;
        print, 'convert_modis_and_make_meta: out_filename        = ', i_out_filename;
        print, 'convert_modis_and_make_meta: start_time_array_element = ', i_start_time_array_element;
        over_all_status = FAILURE;

        ; Since the data file exist on disk may be the only file, we must quarantine it before the normal file removal.
        ; Quarantine (make a copy) the staged data file so we can inspect it later.

        quarantine_status = quarantine_one_staged_dataset(i_data_filename);

        ; Remove staged data file and current job.

        l_erase_status = erase_one_staged_dataset($
                            i_data_filename, $ 
                            i_processing_type, $
                            i_out_filename);

        l_remove_status = erase_current_job(GETENV('MODIS_CURRENT_JOBS_DIR'), $
                              FILE_BASENAME(original_out_filename) + ".bz2");
    
        l_status = error_log_writer($
                  'convert_modis_and_make_meta',$
                  'Failed in make_modisl2p_meta:' + i_data_filename);
    endif
  endif

endelse

; ---------- Close up shop ----------
return, over_all_status
end
