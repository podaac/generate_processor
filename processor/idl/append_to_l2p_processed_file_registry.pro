;  Copyright 2007, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: append_to_L2P_processed_file_registry.pro,v 1.2 2007/08/08 15:04:11 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

; Function appends the new name to the end of the L2P processed file registry.
;
; Note: The original code was written in Perl.  This function is in IDL to allow the IDL code
;       to perform the append to registry as part of the new code to take advantage of TaskDL
;       farming out IDL jobs to the slave nodes. 
;
;------------------------------------------------------------------------------------------------

FUNCTION append_to_L2P_processed_file_registry, $
    i_master_processed_filelist, $
    i_l2p_core_filename

;
; Return variable(s).
;    

r_status = 0;

;
; Check to see if the file registry exist first, before appending to the registry.
;

if FILE_TEST(i_master_processed_filelist) then begin

    ; The file exist, we will lock it.
    ; Since the lock will never be held more than a few seconds, we will not check the status.

    l_lock_status = lock_processed_file_registry();

    ; Get the current time in ASCII and in seconds since 1970.

    l_current_time_in_seconds_as_float = SYSTIME(/SECONDS);
    l_current_time_in_ascii   = SYSTIME(0,l_current_time_in_seconds_as_float);
    l_current_time_in_seconds_as_ascii = STRTRIM(STRING(LONG(l_current_time_in_seconds_as_float)),2);
 
    ; Append the name of the newly processed L2P file to the registry using the echo command.

    system_command_string = 'echo ' + '"' +  i_l2p_core_filename $
                                    + ',' + l_current_time_in_seconds_as_ascii + ',' + l_current_time_in_ascii + '"' + '>> ' + i_master_processed_filelist;

    print, 'append_to_L2P_processed_file_registry: system_command_string = [' $
          + system_command_string + ']';

    SPAWN, system_command_string

   ; Release the lock for the next process.

   release_processed_file_registry;
 
endif else begin 
    print, "append_to_L2P_processed_file_registry: ERROR, File not found ", i_master_processed_filelist;
    print, "append_to_L2P_processed_file_registry: Cannot append ", i_l2p_core_filename;
    r_status = 1;
endelse

return, r_status;
END
