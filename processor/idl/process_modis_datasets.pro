;  Copyright 2007, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id: process_modis_datasets.pro,v 1.15 2007/08/08 15:04:12 qchau Exp $
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

PRO process_modis_datasets,$
    i_datasets_list,$
    i_datatype,$
    i_convert_to_kelvin,$ 
    i_L2P_registry,$
    i_compress_flag,$
    i_processing_type,$
    i_use_cluster_flag

; Program read from file containing a list of datasets to process, read each file
; and convert them from HDF format to NetCDF format with some processing. 

;
; Assumptions:
;
;   1. TBD 
;
;------------------------------------------------------------------------------------------------

; Load constants.  No ending semicolon is required.

@data_const_config.cfg

over_all_status = SUCCESS;

    args = COMMAND_LINE_ARGS(COUNT = argCount);

    IF argCount EQ 0 THEN BEGIN
        ;PRINT, 'process_modis_datasets:No input arguments specified'
        ;RETURN
    ENDIF ELSE BEGIN
        i_datasets_list     = args[0];
        i_datatype          = args[1];
        i_convert_to_kelvin = args[2];
        i_L2P_registry      = args[3];
        i_compress_flag     = args[4];
        i_processing_type   = args[5];
        IF argCount EQ 7 THEN BEGIN
            i_use_cluster_flag = args[6];
        ENDIF ELSE BEGIN
            i_use_cluster_flag = 'LEAVE_ALONE_CLUSTER_IF_AVAILABLE'; 
        ENDELSE
    ENDELSE

;
; Build the IDL command strings to be sent to TaskDL.
;

build_modis_processing_jobs,$
    i_datasets_list,        $
    i_datatype,             $
    i_convert_to_kelvin,    $
    i_L2P_registry,         $
    i_compress_flag,        $
    i_processing_type,      $
    lo_processing_jobs_array, $
    lo_current_jobs_array

;
; Send the IDL processing jobs to TaskDL.
;

l_execute_status = execute_idl_processing_jobs($
   lo_processing_jobs_array, $
   i_use_cluster_flag, $
   i_datatype);

;print, 'process_modis_datasets: l_execute_status = ', l_execute_status;

;
; Remove the jobs from the current_jobs directory if failed to send IDL jobs to the cluster.
;

if (l_execute_status NE SUCCESS) then begin

    print, 'process_modis_datasets: Removing current_jobs...';
    ; Get location of current_jobs directory from environment.

    job_directory = GETENV('MODIS_CURRENT_JOBS_DIR');

    ; Do the removal of the "empty" files. 

    for job_num = 0, (SIZE(lo_current_jobs_array,/N_ELEMENTS) - 1) do begin
print, 'process_modis_datasets: Removing job:' + lo_current_jobs_array[job_num];
        l_remove_status = erase_current_job(job_directory, $
                               lo_current_jobs_array[job_num]);
    endfor

    ; Removed the staged datasets.
    l_remove_status = erase_staged_datasets(i_datasets_list);

endif

;
; The last end statement is not necessary if running with this file as input to PERL
; since it complains about the syntax.
;
; Comment out if running as part of PERL
; Leave uncomment if running within IDL.

exit

end
