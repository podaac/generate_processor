#!/bin/csh
#
#  Copyright 2010, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM
#
# This is a C-shell to ping seatide/seafire (or any other host) to make sure it is alive before proceeding with other processing.
# It is helpful to know if these machines are up before proceeding with creating MODIS L2P or doing Ancillary Filling Processing.
#
# First parameter is the host name to ping
# Second parameter is the list of email addresses to send out if the host is down.
# Third optional paramter is send_mail_if_alive if wish to receive email if the host is up.
# Edited 6/2013 to make script executable.

if ($# < 2) then
   echo "You must specify at least 2 parameters:   host_name  recipient_email_addresses"
   echo "Specify send_mail_if_alive as 3rd parameter if wish to receive email if the host is up."
   echo ""
   echo "num_args_provided [$#]"
   echo ""
   exit 1
endif

echo "argument 1 [$1]"
echo "argument 2 [$2]"
echo "argument 3 [$3]"

# Get the arguments.

set host_name       = $1
set recipient_names = $2
set send_if_alive   = $3

# Start postfix

/etc/init.d/postfix start

# Set the value of flag to send email

set SEND_MAIL_FLAG_VALUE = "send_mail_if_alive" 

# Ping the host just twice.

set percent_loss = `ping -c 10 $host_name | grep "packet loss" | awk '{print $6}'`

echo "set percent_loss = to " "ping -c 2 $host_name | grep 'packet loss' | awk '{print $6}'"

echo "percent_loss [$percent_loss]"
echo "SEND_MAIL_FLAG_VALUE [$SEND_MAIL_FLAG_VALUE]"

# Create an empty email content.

set empty_mail_content = $EMPTY_EMAIL_LOCATION/empty_file_used_in_sending_out_blank_email

# Check for the percent loss value.  Send email if not equal to 0%.

if $percent_loss == "0%" then

  echo "machine $host_name is alive and well" 
  echo "send_if_alive [$send_if_alive]" 

  # Don't do anything here.  Set to 2 == 2 to test getting an email.  
#  if (2 == 2) then
  if ($send_if_alive == $SEND_MAIL_FLAG_VALUE) then
    ## Create an empty email content.
    touch $empty_mail_content
    echo "Email automatically generated from C-shell pinger.csh on machine $HOST" >> $empty_mail_content 

    echo "machine $host_name is alive and well" 

    # Send a short email to notify someone that is is alive and well.
    mail -s "$MACHINE - $GENERATE_VERSION Alert: Machine $host_name is alive and well" $recipient_names -a FROM:processor@generate.app < $empty_mail_content

    # Don't forget to remove temporary empty file.
    rm -f $empty_mail_content
  endif

  # Don't forget to remove temporary empty file because the machine is alive and we are resetting to as if everything was fine.
  rm -f $empty_mail_content

 # Stop postfix
  sleep 5
  /etc/init.d/postfix stop 

  # Exit normally.
  exit 0

else

 # Only send the email if it hasn't been sent already to prevent email flood. 
 if (!(-e $EMPTY_EMAIL_LOCATION/empty_file_used_in_sending_out_blank_email)) then
    # Create an empty email content.

    touch $empty_mail_content
    echo "Email automatically generated from C-shell pinger.csh on machine $HOST" >> $empty_mail_content 

    echo "machine $host_name is down" 

    # Send a short email to notify someone that is is down.
    mail -s "$MACHINE - $GENERATE_VERSION Alert: Machine $host_name is down" $recipient_names -a FROM:processor@generate.app < $empty_mail_content

    # Stop postfix
    sleep 5
    /etc/init.d/postfix stop

    # Cannot continue, must exit.  Exit with value 1 so subsequent command can check for $status and not continue.
    exit 1
 else
    echo "machine $host_name is down and the email already has been sent" 

    # Stop postfix
    sleep 5
    /etc/init.d/postfix stop

    # Cannot continue, must exit.  Exit with value 1 so subsequent command can check for $status and not continue.
    exit 1
 endif
endif
