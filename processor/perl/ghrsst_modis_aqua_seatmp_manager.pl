#!/usr/local/bin/perl

#  Copyright 2006, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id: ghrsst_modis_aqua_seatmp_manager.pl,v 1.8 2008/01/07 20:30:22 qchau Exp $
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CVS
# New Request #xxxx

#
#
# Program manages the GHRSST MODIS Quicklook Aqua datasets by:
#
#    1) Defining location of various directories and symbols.
#    2) Calls the following subroutine to:
#
#        ghrsst_modis_file_manager()      Read and process the MODIS data files.
#
# How this program is ran:
#
#    1) Either submit this file as part of a crontab or run it
#       with the name of the file on command line.
#
#------------------------------------------------------------------------------------------------

# Location of GHRSST Perl library functions.

$GHRSST_PERL_LIB_DIRECTORY = $ENV{GHRSST_PERL_LIB_DIRECTORY};

do "$GHRSST_PERL_LIB_DIRECTORY/ghrsst_modis_file_manager.pl";

# Set global number of files to process each time.
# Useful in coding and debugging and in controlling how long the script should run for.

#$NUM_FILES_TO_PROCESS = 100;
$NUM_FILES_TO_PROCESS = 15;

# Set global flag to 1 if wish to overwrite existing files.
# Normally, this should be set to zero.

$over_write_processed_modis_files = 0;

# Get the user's original umask and save it.

my $original_user_mask = umask();

#print "original_user_mask = $original_user_mask\n";

# Set the umask to 02 (results in g+rw) so people in the same group can modify MODIS L2P files.

my $previous_mask = umask(02);

#print "previous_mask = $previous_mask\n";

my $new_mask = umask();

#print "new_mask = $new_mask\n";

# If the input are provided, we reset our parameters

my $num_args = $#ARGV + 1;

if ($num_args >= 2) {
    if ($ARGV[0] ne '') {
        $NUM_FILES_TO_PROCESS = $ARGV[0];
    }

    if ($ARGV[1] ne '' && $ARGV[1] eq "yes") {
        $over_write_processed_modis_files = 1;
    }
}

#  Call subroutine to manage the MODIS Aqua sea surface temperature files.

my $ftp_push_flag = "yes";
my $compress_flag = "yes";
my $checksum_flag = "yes";
my $convert_to_kelvin = "yes";
my $processing_type = "QUICKLOOK";
my $use_cluster_flag = "MAKE_USE_CLUSTER_IF_AVAILABLE";

ghrsst_modis_file_manager("sea_surface_temperature","MODIS_A",$ftp_push_flag,$compress_flag,
                           $checksum_flag,$convert_to_kelvin,$processing_type,$use_cluster_flag);

# Reset to user's original mask.

umask($original_user_mask);

$current_mask = umask();

#print "current_mask = $current_mask\n";
