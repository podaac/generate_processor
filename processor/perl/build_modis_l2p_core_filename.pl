#! /usr/local/bin/perl

#  Copyright 2005, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id: build_modis_l2p_core_filename.pl,v 1.11 2007/12/04 22:09:39 qchau Exp $
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CVS
# New Request #xxxx

# Subroutine parses a MODIS sea surface temperature for the start time
# Certain assumptions are made about the format of the filename.
#
#------------------------------------------------------------------------------------------------

do "$GHRSST_PERL_LIB_DIRECTORY/convert_to_mm_day.pl";
do "$GHRSST_PERL_LIB_DIRECTORY/remove_refined_prefix_from_filename.pl";
do "$GHRSST_PERL_LIB_DIRECTORY/is_granule_night_or_day.pl";

sub build_modis_l2p_core_filename {

    #
    # Get input.
    #

    my $i_filename     = $_[0];
    my $i_modis_output_directory = $_[1];
    my $i_datasource           = $_[2];

    #
    # Local variables.
    #
    
    my $r_status = 0;
    my $r_output_l2p_core_filename = 0;
    my $r_meta_filename            = "";
    my $r_new_l2p_core_name        = "";

    #
    # The filename has the below format:
    #
    # /project/nrt/melia/oceanids/data/GHRSST-TEMP/MODIS/2006/097/ 
    #    A2006097005500.L2_LAC_GSSTN.bz2 
    #
    #     01234567890  
    #

    #
    # Now, we split the name into separate substrings separated by the slash.
    #
    
    my @splitted_array = split(/\//,$i_filename);

    #
    # We need to get access to the doy and the year substrings. 
    #

    my $num_substrings = @splitted_array;

    # The doy is next to last.  The year is one before that.
    # Must add special handling for cases of '//' in file name.

    my $doy_index  = ($num_substrings - 1) - 1;  # The day of year is one before the name.
    if (length($splitted_array[$doy_index]) == 0) {
       $doy_index  = $doy_index - 1; 
    }

    my $yyyy_index = $doy_index - 1; # The year is one before day of year.

    my $r_doy  = $splitted_array[$doy_index];
    my $r_yyyy = $splitted_array[$yyyy_index];

#print "build_modis_l2p_core_filename:i_filename = [$i_filename]\n";
#print "build_modis_l2p_core_filename:splitted_array = @splitted_array\n";
#print "build_modis_l2p_core_filename:r_yyyy = [$r_yyyy]\n";
#print "build_modis_l2p_core_filename:r_doy  = [$r_doy]\n";

    #
    # The convert the day of year to the m#nth and day.
    #

    ($o_year, $o_mm, $o_dd) = convert_to_mm_day($r_yyyy,$r_doy);

    # Adding leading zero if month is less than October.

    if ($o_mm < 10) {
        $o_mm = "0" . $o_mm;
    }

    # Adding leading zero if day is less than the 10th of the month
    if ($o_dd < 10) {
        $o_dd = "0" . $o_dd;
    }

    #
    # Remove any refined prefix.
    #
    my $name_only = $splitted_array[$num_substrings-1];
    my $l_status = 0;
#print "build_modis_l2p_core_filename:before remove_refined_prefix_from_filename, name_only = $name_only\n";
    ($l_status,$name_only) = remove_refined_prefix_from_filename($name_only);
#print "build_modis_l2p_core_filename:after remove_refined_prefix_from_filename, name_only = $name_only\n";

    #
    # Split the file name further. 
    #

    my @splitted_filename = split(/\./,$name_only);
    my $night_or_day = ""; 

    my $USE_NEW_NAME_CONVENTION = 1;   # Set to 0 if wish to switch back to old naming convention.
                                       # The value of night_or_day will blank if set to 0.
    
    if ($USE_NEW_NAME_CONVENTION == 1) {
        # Split the 2nd token A2008103042000.L2_LAC_GSSTN to get access to either "GSSTN" or "GSSTD"
        # Then token we want is the 3rd token (index 2) containing "GSSTN" or "GSSTD"

        my @second_split_array = split(/_/,$splitted_filename[1]);
        my $third_token = $second_split_array[2];

        # The character signifying Night or Day is the last character.

        $night_or_day = substr($third_token,(length($third_token)-1),1);  # We want the last character
    }

    # If we have not been able to extract the value night_or_day we will have to read the global attribute from the file.

    my $when_granule_observed_flag = '';
    if ($night_or_day eq '') {
        $when_granule_observed_flag = is_granule_night_or_day($i_filename);
        if ($when_granule_observed_flag eq 'Day') {
            $night_or_day = 'D';
        } else {
            $night_or_day = 'N';
        }
    }

    # Create the new name based on convention.

    my $L2_LAC_extension = ".L2_LAC_GHRSST_" . $night_or_day . "-v01.nc";
    my $L2_FR_extension  = ".L2_LAC_GHRSST_" . $night_or_day . "-v01.xml";

    $r_new_l2p_core_name = "$r_yyyy$o_mm$o_dd-$i_datasource-JPL-L2P-$splitted_filename[0]$L2_LAC_extension";
    my $meta_name_only    = "FR-$r_yyyy$o_mm$o_dd-$i_datasource-JPL-L2P-$splitted_filename[0]$L2_FR_extension";

    $r_output_l2p_core_filename = "$i_modis_output_directory/$r_yyyy/$r_doy/$r_new_l2p_core_name";

    # Create metadata file name as well.

    $r_meta_filename            = "$i_modis_output_directory/$r_yyyy/$r_doy/$meta_name_only";

    #
    # Close up shop and return.
    #

    return ($r_meta_filename,$r_output_l2p_core_filename,$r_new_l2p_core_name,$r_yyyy,$r_doy)
}
